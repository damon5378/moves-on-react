{"version":3,"sources":["App.jsx","useMovement.jsx","index.js"],"names":["App","canvasRef","useRef","linkDownRef","linkUpRef","linkRightRef","linkLeftRef","useState","x","setX","y","setY","direction","setDirection","move","dir","useEffect","handleKeyDown","e","key","window","addEventListener","removeEventListener","useMovement","context","current","getContext","canvas","height","innerHeight","width","innerWidth","theLinkRef","clearRect","drawImage","className","ref","onClick","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAoEeA,MAhEf,WAEE,IAAMC,EAAYC,iBAAO,MACnBC,EAAcD,iBAAO,MACrBE,EAAYF,iBAAO,MACnBG,EAAeH,iBAAO,MACtBI,EAAcJ,iBAAO,MANd,ECFA,WAAwB,IAAD,EAClBK,mBAAS,GADS,mBAC7BC,EAD6B,KAC1BC,EAD0B,OAElBF,mBAAS,GAFS,mBAE7BG,EAF6B,KAE1BC,EAF0B,OAGFJ,mBAAS,QAHP,mBAG7BK,EAH6B,KAGlBC,EAHkB,KAmBpC,SAASC,EAAKC,GACZF,EAAaE,GACD,OAARA,GAAcJ,GAAK,SAACD,GAAD,OAAOA,EAAI,MACtB,SAARK,GAAgBN,GAAK,SAACD,GAAD,OAAOA,EAAI,MACxB,SAARO,GAAgBJ,GAAK,SAACD,GAAD,OAAOA,EAAI,MACxB,UAARK,GAAiBN,GAAK,SAACD,GAAD,OAAOA,EAAI,MAGvC,OArBAQ,qBAAU,WAGR,SAASC,EAAcC,GACP,YAAVA,EAAEC,KAAmBL,EAAK,MAChB,cAAVI,EAAEC,KAAqBL,EAAK,QAClB,cAAVI,EAAEC,KAAqBL,EAAK,QAClB,eAAVI,EAAEC,KAAsBL,EAAK,SAGnC,OATAM,OAAOC,iBAAiB,UAAWJ,GAS5B,kBAAMG,OAAOE,oBAAoB,UAAWL,MAClD,IAUI,CAAET,IAAGE,IAAGE,YAAWE,QDlBQS,GAA1Bf,EAPK,EAOLA,EAAGE,EAPE,EAOFA,EAAGE,EAPD,EAOCA,UAAWE,EAPZ,EAOYA,KAwBzB,OArBAE,qBAAU,WACR,IAAMQ,EAAUvB,EAAUwB,QAAQC,WAAW,MAC7CF,EAAQG,OAAOC,OAASR,OAAOS,YAC/BL,EAAQG,OAAOG,MAAQV,OAAOW,aAC7B,IAGHf,qBAAU,WACR,IAIIgB,EAJER,EAAUvB,EAAUwB,QAAQC,WAAW,MAC7CF,EAAQS,UAAU,EAAG,EAAGb,OAAOW,WAAYX,OAAOS,aAIhC,SAAdjB,IAAsBoB,EAAa7B,GACrB,OAAdS,IAAoBoB,EAAa5B,GACnB,SAAdQ,IAAsBoB,EAAa1B,GACrB,UAAdM,IAAuBoB,EAAa3B,GAExCmB,EAAQU,UAAUF,EAAWP,QAASjB,EAAGE,KACxC,CAACF,EAAGE,IAGL,sBAAKyB,UAAU,MAAf,UACE,wBAAQC,IAAKnC,IAEb,sBAAKkC,UAAU,SAAf,UACE,wBAAQE,QAAS,kBAAMvB,EAAK,OAA5B,gBACA,wBAAQuB,QAAS,kBAAMvB,EAAK,SAA5B,kBACA,wBAAQuB,QAAS,kBAAMvB,EAAK,SAA5B,kBACA,wBAAQuB,QAAS,kBAAMvB,EAAK,UAA5B,sBAGF,sBAAKqB,UAAU,SAAf,UACE,qBACEC,IAAKjC,EACLmC,IAAI,kCACJC,IAAI,SAEN,qBACEH,IAAK/B,EACLiC,IAAI,kCACJC,IAAI,UAEN,qBAAKH,IAAKhC,EAAWkC,IAAI,kCAAkCC,IAAI,OAC/D,qBACEH,IAAK9B,EACLgC,IAAI,kCACJC,IAAI,gBExDdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ec25cf9a.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './App.css';\nimport useMovement from './useMovement';\n\nfunction App() {\n\n  const canvasRef = useRef(null);\n  const linkDownRef = useRef(null);\n  const linkUpRef = useRef(null);\n  const linkRightRef = useRef(null);\n  const linkLeftRef = useRef(null);\n  const { x, y, direction, move } = useMovement();\n\n  // set the height and width of canvas\n  useEffect(() => {\n    const context = canvasRef.current.getContext('2d');\n    context.canvas.height = window.innerHeight;\n    context.canvas.width = window.innerWidth;\n  }, []);\n\n  // move the box if x or y changes\n  useEffect(() => {\n    const context = canvasRef.current.getContext('2d');\n    context.clearRect(0, 0, window.innerWidth, window.innerHeight);\n    // context.fillRect(x, y, 100, 100);\n\n    let theLinkRef;\n    if (direction === 'down') theLinkRef = linkDownRef;\n    if (direction === 'up') theLinkRef = linkUpRef;\n    if (direction === 'left') theLinkRef = linkLeftRef;\n    if (direction === 'right') theLinkRef = linkRightRef;\n\n    context.drawImage(theLinkRef.current, x, y);\n  }, [x, y]);\n\n  return (\n    <div className=\"app\">\n      <canvas ref={canvasRef} />\n\n      <div className=\"arrows\">\n        <button onClick={() => move('up')}>Up</button>\n        <button onClick={() => move('left')}>Left</button>\n        <button onClick={() => move('down')}>Down</button>\n        <button onClick={() => move('right')}>Right</button>\n      </div>\n\n      <div className=\"images\">\n        <img\n          ref={linkDownRef}\n          src=\"https://i.imgur.com/JYUB0m3.png\"\n          alt=\"Down\"\n        />\n        <img\n          ref={linkRightRef}\n          src=\"https://i.imgur.com/GEXD7bk.gif\"\n          alt=\"Right\"\n        />\n        <img ref={linkUpRef} src=\"https://i.imgur.com/XSA2Oom.gif\" alt=\"Up\" />\n        <img\n          ref={linkLeftRef}\n          src=\"https://i.imgur.com/4LGAZ8t.gif\"\n          alt=\"Left\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function useMovement() {\r\n  const [x, setX] = useState(0);\r\n  const [y, setY] = useState(0);\r\n  const [direction, setDirection] = useState('down');\r\n\r\n  // add event listener to window to listen for arrow keys\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    function handleKeyDown(e) {\r\n      if (e.key === 'ArrowUp') move('up');\r\n      if (e.key === 'ArrowLeft') move('left');\r\n      if (e.key === 'ArrowDown') move('down');\r\n      if (e.key === 'ArrowRight') move('right');\r\n    }\r\n\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  }, []);\r\n\r\n  function move(dir) {\r\n    setDirection(dir);\r\n    if (dir === 'up') setY((y) => y - 20);\r\n    if (dir === 'left') setX((x) => x - 20);\r\n    if (dir === 'down') setY((y) => y + 20);\r\n    if (dir === 'right') setX((x) => x + 20);\r\n  }\r\n\r\n  return { x, y, direction, move };\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}